{"version":3,"file":"react-css-modules.macro.js","sources":["../src/macro.js"],"sourcesContent":["const { createMacro } = require(\"babel-plugin-macros\");\nconst { name } = require(\"../package.json\");\n\nconst removeStyleNameAttr = path => {\n  path.node.openingElement.attributes = [\n    ...path.node.openingElement.attributes.filter(attr => attr.name.name !== \"styleName\")\n  ];\n};\n\nconst findClassNameAttr = path => {\n  return path.node.openingElement.attributes.find(attr => attr.name.name === \"className\");\n};\n\nconst createClassNameAttr = (t, value) => {\n  return t.JSXAttribute(t.jsxIdentifier(\"className\"), value);\n};\n\nconst getStyleNameAttrPayload = (t, styleNameAttr) => {\n  if (t.isStringLiteral(styleNameAttr.value)) {\n    return styleNameAttr.value;\n  }\n\n  return styleNameAttr.value.expression;\n};\n\nconst visitor = (t, getStyleNameIdentifier) => ({\n  JSXElement(path) {\n    if (path.node.openingElement.attributes.length) {\n      const styleNameAttr = path.node.openingElement.attributes.find(\n        attr => attr.name.name === \"styleName\"\n      );\n      if (styleNameAttr) {\n        removeStyleNameAttr(path);\n        const styleNameAttrPayload = getStyleNameAttrPayload(t, styleNameAttr);\n        \n\n        const styleNameExp = t.callExpression(getStyleNameIdentifier, [styleNameAttrPayload]);\n        const classNameAttr = findClassNameAttr(path);\n\n        if (classNameAttr) {\n          if (t.isJSXExpressionContainer(classNameAttr.value)) {\n            classNameAttr.value = t.JSXExpressionContainer(\n              t.binaryExpression(\"+\", classNameAttr.value.expression, styleNameExp)\n            );\n          }\n\n          if (t.isStringLiteral(classNameAttr.value)) {\n            classNameAttr.value = t.JSXExpressionContainer(\n              t.binaryExpression(\"+\", classNameAttr.value, styleNameExp)\n            );\n          }\n\n          path.node.openingElement.attributes = [classNameAttr];\n        } else {\n          const newClassNameAttr = createClassNameAttr(t, t.JSXExpressionContainer(styleNameExp));\n          path.node.openingElement.attributes = [newClassNameAttr];\n        }\n      }\n    }\n  }\n});\n\nconst getStylesArgument = path => path.parent.arguments[0];\n\nfunction myMacro({ references, babel }) {\n  const { macro = [] } = references;\n  const { types: t } = babel;\n  macro.forEach(referencePath => {\n    const stylesArgument = getStylesArgument(referencePath);\n    if (!stylesArgument) {\n      throw \"Styles map argument must be provided\";\n    }\n\n    const programPath = referencePath.findParent(parentPath => parentPath.isProgram());\n    referencePath.parentPath.remove();\n    const firstImportDeclarationNode = programPath\n      .get(\"body\")\n      .find(node => t.isImportDeclaration(node));\n\n    const firstNonImportDeclarationNode = programPath\n      .get(\"body\")\n      .find(node => !t.isImportDeclaration(node));\n\n    const getStyleNameIdentifier = programPath.scope.generateUidIdentifier(\"getStyleName\");\n    const bindStyleNames = programPath.scope.generateUidIdentifier(\"bindStyleNames\");\n    const helperImportDeclaration = t.importDeclaration(\n      [t.importDefaultSpecifier(bindStyleNames)],\n      t.stringLiteral(`${name}/dist/bindStyleName`)\n    );\n\n    const bindedStylesDeclaration = t.variableDeclaration(\"const\", [\n      t.variableDeclarator(\n        getStyleNameIdentifier,\n        t.callExpression(bindStyleNames, [stylesArgument])\n      )\n    ]);\n\n    firstImportDeclarationNode.insertBefore(helperImportDeclaration);\n    firstNonImportDeclarationNode.insertBefore(bindedStylesDeclaration);\n\n    programPath.traverse(visitor(t, getStyleNameIdentifier));\n  });\n}\n\nexport default createMacro(myMacro);\n"],"names":["createMacro","require","name","references","macro","t","babel","types","forEach","referencePath","stylesArgument","parent","arguments","programPath","findParent","parentPath","isProgram","remove","firstImportDeclarationNode","get","find","node","isImportDeclaration","firstNonImportDeclarationNode","getStyleNameIdentifier","scope","generateUidIdentifier","bindStyleNames","helperImportDeclaration","importDeclaration","importDefaultSpecifier","stringLiteral","bindedStylesDeclaration","variableDeclaration","variableDeclarator","callExpression","insertBefore","traverse","JSXElement","path","openingElement","attributes","length","styleNameAttr","attr","filter","removeStyleNameAttr","styleNameAttrPayload","isStringLiteral","value","expression","getStyleNameAttrPayload","styleNameExp","classNameAttr","findClassNameAttr","isJSXExpressionContainer","JSXExpressionContainer","binaryExpression","newClassNameAttr","JSXAttribute","jsxIdentifier","createClassNameAttr","visitor"],"mappings":"IAAQA,EAAgBC,QAAQ,uBAAxBD,YACAE,EAASD,QAAQ,mBAAjBC,OAuGOF,EAxCf,oBAAmBG,WACTC,MACOC,IAFcC,MAErBC,kBADQ,MAEVC,QAAQ,SAAAC,OACNC,EAAmCD,EANNE,OAAOC,UAAU,OAO/CF,OACG,2CAGFG,EAAcJ,EAAcK,WAAW,SAAAC,UAAcA,EAAWC,cACtEP,EAAcM,WAAWE,aACnBC,EAA6BL,EAChCM,IAAI,QACJC,KAAK,SAAAC,UAAQhB,EAAEiB,oBAAoBD,KAEhCE,EAAgCV,EACnCM,IAAI,QACJC,KAAK,SAAAC,UAAShB,EAAEiB,oBAAoBD,KAEjCG,EAAyBX,EAAYY,MAAMC,sBAAsB,gBACjEC,EAAiBd,EAAYY,MAAMC,sBAAsB,kBACzDE,EAA0BvB,EAAEwB,kBAChC,CAACxB,EAAEyB,uBAAuBH,IAC1BtB,EAAE0B,wBAAiB7B,2BAGf8B,EAA0B3B,EAAE4B,oBAAoB,QAAS,CAC7D5B,EAAE6B,mBACAV,EACAnB,EAAE8B,eAAeR,EAAgB,CAACjB,OAItCQ,EAA2BkB,aAAaR,GACxCL,EAA8Ba,aAAaJ,GAE3CnB,EAAYwB,SA3EA,SAAChC,EAAGmB,SAA4B,CAC9Cc,oBAAWC,MACLA,EAAKlB,KAAKmB,eAAeC,WAAWC,OAAQ,KACxCC,EAAgBJ,EAAKlB,KAAKmB,eAAeC,WAAWrB,KACxD,SAAAwB,SAA2B,cAAnBA,EAAK1C,KAAKA,UAEhByC,EAAe,EA5BG,SAAAJ,SAC1BA,EAAKlB,KAAKmB,eAAeC,oHACpBF,EAAKlB,KAAKmB,eAAeC,WAAWI,OAAO,SAAAD,SAA2B,cAAnBA,EAAK1C,KAAKA,8NA2B5D4C,CAAoBP,OACdQ,EAhBkB,SAAC1C,EAAGsC,UAC9BtC,EAAE2C,gBAAgBL,EAAcM,OAC3BN,EAAcM,MAGhBN,EAAcM,MAAMC,WAWQC,CAAwB9C,EAAGsC,GAGlDS,EAAe/C,EAAE8B,eAAeX,EAAwB,CAACuB,IACzDM,EA5BY,SAAAd,UACjBA,EAAKlB,KAAKmB,eAAeC,WAAWrB,KAAK,SAAAwB,SAA2B,cAAnBA,EAAK1C,KAAKA,OA2BtCoD,CAAkBf,MAEpCc,EACEhD,EAAEkD,yBAAyBF,EAAcJ,SAC3CI,EAAcJ,MAAQ5C,EAAEmD,uBACtBnD,EAAEoD,iBAAiB,IAAKJ,EAAcJ,MAAMC,WAAYE,KAIxD/C,EAAE2C,gBAAgBK,EAAcJ,SAClCI,EAAcJ,MAAQ5C,EAAEmD,uBACtBnD,EAAEoD,iBAAiB,IAAKJ,EAAcJ,MAAOG,KAIjDb,EAAKlB,KAAKmB,eAAeC,WAAa,CAACY,OAClC,KACCK,EAzCY,SAACrD,EAAG4C,UACvB5C,EAAEsD,aAAatD,EAAEuD,cAAc,aAAcX,GAwCnBY,CAAoBxD,EAAGA,EAAEmD,uBAAuBJ,IACzEb,EAAKlB,KAAKmB,eAAeC,WAAa,CAACiB,QA6CxBI,CAAQzD,EAAGmB"}