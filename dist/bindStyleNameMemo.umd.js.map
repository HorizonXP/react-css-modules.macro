{"version":3,"file":"bindStyleNameMemo.umd.js","sources":["../src/bindStyleName.js","../src/bindStyleNameMemo.js"],"sourcesContent":["const getClassNames = (input, stylesMap) =>\n  input.map(name => stylesMap[name] || name).join(\" \");\n\nconst bindStyleName = (memoWrapper) => (stylesMap) => {\n  return memoWrapper(\n    styleNames => {\n      if (styleNames) {\n        if (Array.isArray(styleNames)) {\n          return ` ${getClassNames(styleNames, stylesMap)}`;\n        }\n\n        if (typeof styleNames === \"string\") {\n          return ` ${getClassNames(styleNames.split(\" \"), stylesMap)}`;\n        }\n\n        if (typeof styleNames === \"object\") {\n          const keys = Object.keys(styleNames).filter(key => styleNames[key]);\n          return ` ${getClassNames(keys, stylesMap)}`;\n        }\n      }\n      return \"\";\n    },\n    { length: 1, maxAge: 5000, primitive: true },\n  );\n};\n\nexport default bindStyleName;\n","import memoizee from \"memoizee\";\n\nimport bindStyleName from './bindStyleName';\n\nconst memoBindStyeName = bindStyleName(memoizee);\nconsole.warn('USING MEMO IMPLEMENTATION');\n\nexport default memoBindStyeName;"],"names":["memoWrapper","getClassNames","input","stylesMap","map","name","join","memoBindStyeName","memoizee","styleNames","Array","isArray","split","_typeof","keys","Object","filter","key","length","maxAge","primitive","console","warn"],"mappings":"gfAAA,IAGuBA,EAHjBC,EAAgB,SAACC,EAAOC,UAC5BD,EAAME,IAAI,SAAAC,UAAQF,EAAUE,IAASA,IAAMC,KAAK,MCG5CC,GDDiBP,ECCgBQ,EDDA,SAACL,UAC/BH,EACL,SAAAS,MACMA,EAAY,IACVC,MAAMC,QAAQF,oBACLR,EAAcQ,EAAYN,OAGb,iBAAfM,mBACER,EAAcQ,EAAWG,MAAM,KAAMT,OAGxB,WAAtBU,EAAOJ,GAAyB,KAC5BK,EAAOC,OAAOD,KAAKL,GAAYO,OAAO,SAAAC,UAAOR,EAAWQ,sBACnDhB,EAAca,EAAMX,WAG5B,IAET,CAAEe,OAAQ,EAAGC,OAAQ,IAAMC,WAAW,aCjB1CC,QAAQC,KAAK"}