{"version":3,"file":"bindStyleName.js","sources":["../src/bindStyleName.js"],"sourcesContent":["// TODO: memo should be optional\nimport memoizee from 'memoizee';\n\nconst getClassNames = (input, stylesMap) =>\n  input.map(name => stylesMap[name] || name).join(\" \");\n\n\nconst bindStyleName = stylesMap => {\n  return memoizee(styleNames => {\n    if (styleNames) {\n      if (Array.isArray(styleNames)) {\n        return ` ${getClassNames(styleNames, stylesMap)}`;\n      }\n\n      if (typeof styleNames === \"string\") {\n        return ` ${getClassNames(styleNames.split(\" \"), stylesMap)}`;\n      }\n\n      if (typeof styleNames === \"object\") {\n        const keys = Object.keys(styleNames).filter(key => styleNames[key]);\n        return ` ${getClassNames(keys, stylesMap)}`;\n      }\n    }\n    return \"\";\n  }, { length: 1, maxAge: 5000, primitive: true });\n};\n\nexport default bindStyleName;\n"],"names":["getClassNames","input","stylesMap","map","name","join","memoizee","styleNames","Array","isArray","split","_typeof","keys","Object","filter","key","length","maxAge","primitive"],"mappings":"oTAGA,IAAMA,EAAgB,SAACC,EAAOC,UAC5BD,EAAME,IAAI,SAAAC,UAAQF,EAAUE,IAASA,IAAMC,KAAK,qBAG5B,SAAAH,UACbI,EAAS,SAAAC,MACVA,EAAY,IACVC,MAAMC,QAAQF,oBACLP,EAAcO,EAAYL,OAGb,iBAAfK,mBACEP,EAAcO,EAAWG,MAAM,KAAMR,OAGxB,WAAtBS,EAAOJ,GAAyB,KAC5BK,EAAOC,OAAOD,KAAKL,GAAYO,OAAO,SAAAC,UAAOR,EAAWQ,sBACnDf,EAAcY,EAAMV,WAG5B,IACN,CAAEc,OAAQ,EAAGC,OAAQ,IAAMC,WAAW"}