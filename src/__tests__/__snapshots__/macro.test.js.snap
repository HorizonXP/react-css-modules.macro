// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`macros basic usage: basic usage 1`] = `
"
import { macro } from \\"../macro\\";
import React, { Component } from 'react';
import styles from './Button.module.css';
import './another-stylesheet.css';

macro(styles)

class Button extends Component {
  render() {
    return (
      <button className=\\"some_global_style\\" styleName=\\"styles-file-style\\">
          Error Button
      </button>
    )
  }
}

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

var _bindStyleName = _interopRequireDefault(
  require(\\"react-css-modules.macro/dist/bindStyleName\\")
);

var _react = _interopRequireWildcard(require(\\"react\\"));

var _ButtonModule = _interopRequireDefault(require(\\"./Button.module.css\\"));

require(\\"./another-stylesheet.css\\");

function _getRequireWildcardCache() {
  if (typeof WeakMap !== \\"function\\") return null;
  var cache = new WeakMap();
  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };
  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }
  var cache = _getRequireWildcardCache();
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  if (obj != null) {
    var hasPropertyDescriptor =
      Object.defineProperty && Object.getOwnPropertyDescriptor;
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor
          ? Object.getOwnPropertyDescriptor(obj, key)
          : null;
        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }
  }
  newObj[\\"default\\"] = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj };
}

function _typeof(obj) {
  if (typeof Symbol === \\"function\\" && typeof Symbol.iterator === \\"symbol\\") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj &&
        typeof Symbol === \\"function\\" &&
        obj.constructor === Symbol &&
        obj !== Symbol.prototype
        ? \\"symbol\\"
        : typeof obj;
    };
  }
  return _typeof(obj);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError(\\"Cannot call a class as a function\\");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if (\\"value\\" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === \\"object\\" || typeof call === \\"function\\")) {
    return call;
  }
  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError(
      \\"this hasn't been initialised - super() hasn't been called\\"
    );
  }
  return self;
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf
    ? Object.getPrototypeOf
    : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      };
  return _getPrototypeOf(o);
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== \\"function\\" && superClass !== null) {
    throw new TypeError(\\"Super expression must either be null or a function\\");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: { value: subClass, writable: true, configurable: true },
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf =
    Object.setPrototypeOf ||
    function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };
  return _setPrototypeOf(o, p);
}

var _getStyleName = (0, _bindStyleName[\\"default\\"])(_ButtonModule[\\"default\\"]);

var Button =
  /*#__PURE__*/
  (function(_Component) {
    _inherits(Button, _Component);

    function Button() {
      _classCallCheck(this, Button);

      return _possibleConstructorReturn(
        this,
        _getPrototypeOf(Button).apply(this, arguments)
      );
    }

    _createClass(Button, [
      {
        key: \\"render\\",
        value: function render() {
          return _react[\\"default\\"].createElement(
            \\"button\\",
            {
              className:
                \\"some_global_style\\" + _getStyleName(\\"styles-file-style\\"),
            },
            \\"Error Button\\"
          );
        },
      },
    ]);

    return Button;
  })(_react.Component);

"
`;
